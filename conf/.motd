#!/bin/bash

let upSeconds="$(/usr/bin/cut -d. -f1 /proc/uptime)"
let secs=$((${upSeconds}%60))
let mins=$((${upSeconds}/60%60))
let hours=$((${upSeconds}/3600%24))
let days=$((${upSeconds}/86400))
UPTIME=`printf "%d days, %02dh%02dm%02ds" "$days" "$hours" "$mins" "$secs"`

# get the load averages
read one five fifteen rest < /proc/loadavg

echo "$(tput setaf 2)   .~~.   .~~.    $(date +"%A, %e %B %Y, %r")"
echo "$(tput setaf 2)  '. \ ' ' / .'   $(uname -srmo)"

diskSpaceTotal="$(df -h | grep -E '/home/vagrant$' | awk '{ print $2 }')"
diskSpaceFree="$(df -h | grep -E '/home/vagrant$' | awk '{ print $4 }')"

echo "$(tput setaf 1)   .~ .~~~..~."
echo "$(tput setaf 1)  : .~.'~'.~. :   Uptime.............: ${UPTIME}"
echo "$(tput setaf 1) ~ (   ) (   ) ~  Memory.............: $(free -h | awk  '/Mem:/{print $4}') (Free) / $(free -h | awk  '/Mem:/{print $2}') (Total)"
echo "$(tput setaf 1)( : '~'.~.'~' : ) Load Averages......: ${one}, ${five}, ${fifteen} (1, 5, 15 min)"
echo "$(tput setaf 1) ~ .~ (   ) ~. ~  Running Processes..: $(ps ax | wc -l | tr -d " ")"
echo "$(tput setaf 1)  (  : '~' :  )   Host IP Address....: $(ip route show default | awk '/default/ {print $3}')"
echo "$(tput setaf 1)   '~ .~~~. ~'    "
echo "$(tput setaf 1)       '~'        Home Disk Space....: ${diskSpaceFree} (Free) / ${diskSpaceTotal} (Total) on /home/vagrant"

echo "$(tput sgr0)-------------------------------------"
echo "$(tput sgr0)Useful commands:"
echo "$(tput sgr0)(*) jetbrains-toolbox -- to install Phpstorm, ..."
echo "$(tput sgr0)(*) phpstorm -- will launch it using xming/VcXsrv"
echo "$(tput sgr0)(*) code -- will launch visual studio code using xming/VcXsrv"
echo "$(tput sgr0)(*) autojump -- j <directory> to easily change directory (see https://www.linode.com/docs/guides/faster-file-navigation-with-autojump/)"

if [[ -d /home/vagrant/projects/bash-tools/bin ]]; then
    echo "$(tput sgr0)(*) cli -- tool to connect to your containers"
    echo "$(tput sgr0)(*) dbImport -- tool to import database from aws or Mizar"
    echo "$(tput sgr0)(*) dbQueryAllDatabases -- tool to execute a query on multiple databases"
else
  echo "$(tput sgr0)(*) initBashTools -- to initialize bash tools (cli, dbImport, dbQueryAllDatabases, ...)"
fi
if [[ -f /var/log/automatic-upgrade ]]; then
  echo "$(tput setaf 1)(*) Weekly Automatic upgrade is failing -- please check logs /var/log/automatic-upgrade"
  echo "$(tput setaf 1)(*) try to launch the prcess manually : sudo /etc/cron.weekly/upgrade"
fi
if [[ -f /var/log/automatic-upgrade-success ]]; then
  display_date_ago() {
    (
      tempHistory=$(mktemp -d)
      trap "rm -Rf ${tempHistory}" EXIT
      cd ${tempHistory}
      git init -q
      git -c user.email=0 -c user.name=0 commit -q -m 0 --allow-empty --date="$1"
      git show --format=%ar
    )
  }
  echo "$(tput setaf 2)(*) Weekly Automatic upgrade success -- last execution date: $(display_date_ago "$(date -r /var/log/automatic-upgrade-success)")"
fi
echo "$(tput sgr0)"
